// Generated by Xata Codegen 0.29.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "resolutions",
    columns: [
      {
        name: "resolution",
        type: "string",
        notNull: true,
        defaultValue: "My resolution",
      },
      { name: "year", type: "int", notNull: true, defaultValue: "2023" },
      {
        name: "isCompleted",
        type: "bool",
        notNull: true,
        defaultValue: "false",
      },
      { name: "user", type: "link", link: { table: "users" } },
    ],
  },
  {
    name: "users",
    columns: [
      {
        name: "email",
        type: "email",
        notNull: true,
        defaultValue: "onuohadarlington38@gmail.com",
      },
      { name: "password", type: "string" },
      { name: "name", type: "string", notNull: true, defaultValue: "John" },
      { name: "surname", type: "string", notNull: true, defaultValue: "Doe" },
      { name: "phone", type: "text", notNull: true, defaultValue: "0" },
    ],
    revLinks: [{ column: "user", table: "resolutions" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Resolutions = InferredTypes["resolutions"];
export type ResolutionsRecord = Resolutions & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type DatabaseSchema = {
  resolutions: ResolutionsRecord;
  users: UsersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Darlington-John-s-workspace-ju0kd2.us-east-1.xata.sh/db/darlington-resolutions",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
